---- 索引和散列 ----

--分类方式一：聚集索引和非聚集索引
聚集索引(主索引)：如果包含记录的文件按照某个搜索码指定的顺序排序，那么该搜索码对应的索引称为聚集索引，也称为主索引
非聚集索引(辅助索引)：搜索码指定的顺序与文件中记录的物理顺序不同的索引称为非聚集索引或辅助索引，辅助索引必须是稠密索引
--分类方式二：稠密索引和稀疏索引
稠密索引：在稠密索引中，文件中的每个搜索码值都有一个索引项
	在稠密聚集索引中：索引项包括搜索码值以及指向具有该搜索码值的第一条数据记录的指针，因为聚集索引是物理有序的，所以后面的记录页容易找到
	在稠密非聚集索引中：索引必须存储指向所有具有相同搜索码的记录的指针列表，因为和上面相反
稀疏索引：在稀疏索引中，只为搜索码的某些值建立索引项，且只有当关系按搜索码排序存储时(即聚集索引)才能用稀疏索引，原因和上面一行一样
	为每个块键一个索引项的稀疏索引是一个好的选择，因为处理数据库查询的开销主要由把块从磁盘读到主存中的时间决定，
	一旦将块放入主存，扫描整改块的时间就可以忽略，当然如果数据在溢出块或在多个块的情况就会耗费更多时间

--多级索引
由于索引本身也要占用空间，所以当索引数量很大时，会占用大量空间，因此不能将索引全部读入内存，这时只能把索引放到磁盘，也当数据来查询
	例子：假设有10000条记录，且每条记录对应一个索引，那么要在这10000个索引中查找一个指定索引需要查找log2 10000=log2 100 + log2 100≈7 + 7≈14次
	假设文件每个块可以存放100个索引，即一共100个块存放索引，那么可以为这100个块创建100个二级索引(稀疏索引)，这100个索引只需1个块来存放，所以可以全部读到内存，
	从内存中查找二级索引的时间可以忽略，只需关心从这个二级索引指向的100个索引的块中查找的时间，查找次数为log2 100≈7次，
	最后加入数据量更大的情况，可以建更多级索引
	
--索引的更新
索引的更新可以理解为插入和删除两个操作，而没有明确的更新操作
插入和更新操作对于稠密索引和稀疏索引有不同的步骤
多级索引的插入和删时，对于第二层索引而言，底层索引被看成包含记录的文件，同理对第三层索引，第二层索引被看成包含记录的文件，依次类推

--多码上的索引
即所以在多个属性上，这样的索引可以用来有效查找某些其他类型的查询